#HoW API Technical Writing Works

If you've come to this page because you are new to technical (tech) writing, or at least new to tech writing for API, welcome. 
I'm glad to help you get started in this area of tech writing! 

You will likely find it to be a closer working relationship with the developer teams you support.

##What is API?

Let's start with what an API is. 
API stands for Application Programming Interface. 
The application can be any software that performs a specific task and the interface is a point where two applications communicate.

One application acts as a client and the other acts as a server. 
A client asks for some resource, for example a file, and the server sends that file to the client.

The client can be your desktop or laptop computer, mobile phone, or any device you use to connect to the internet. 
And the server is a bigger computer that stores the data you want (a file in our case).

Suppose you want an image to upload. When you search online for the image you want, an API is working unseen to complete the conversation between the site where you find your image and your local machine.

##How API documentation is created and edited

>API technical writers have a procedure that they follow to structure data. The process includes hours of research, time spent on compiling data, analyzing it, and writing API documentation. A writer must first examine the data, then create the structure of the document.

>To create helpful API documentation, technical writers must include:

>Use cases: As a technical API documentation writer, you would research relevant topics and provide practical examples. You would also create real-world scenarios that are relevant to the subject, highlighting essential features.
>API functions: As a technical API documentation writer, you would organize each functionâ€™s value to the user. For example, you might list the most important and frequently used functions at the top, explaining functions from the most to least promine

- [https://technicalwriterhq.com/career/api-technical-writer/](https://technicalwriterhq.com/career/api-technical-writer/)

When editing existing developer-facing API documentation, you will need to work with your developers in their prefered editor. Some teams prefer [SwaggerHub](https://app.swaggerhub.com/) or [GitHub](https://docs.github.com/). Both offer an API documentation automation option. If this is being used, you should improve the readability of the API documentation by adding the annotations `@Parameter`, `@Operation`, `@ApiResponses`, `@ApiResponse`, and `@Schema`

